- name: configure backend server
  hosts: backend
  become: yes
  vars:
    login_host: db.rsdevops78s.online
    login_password: ExpenseApp@1

  tasks:
  - name: diable default nodejs module
    ansible.builtin.command: dnf module disable nodejs -y
      
  - name: enable nodejs:20 -y
    ansible.builtin.command: dnf module enable nodejs:20 -y

  - name: install nodejs
    ansible.builtin.dnf: # its not a heterogeneous. only works for RedHat family. .package module is a heterogenious bcz will work for all distributions.
     name: nodejs
     state: installed
    loop:
    - nodejs
    - mysql

  - name: create expense user
    ansible.builtin.user: 
      name: expense

  - name: create a directory
    ansible.builtin.file:
     path: /app
     state: directory

  - name: download backend code
    ansible.builtin.get_url:
      url: https://expense-builds.s3.us-east-1.amazonaws.com/expense-backend-v2.zip
      dest: /tmp/backend.zip

  - name: unzip backend code
    ansible.builtin.unarchive:
      src: /tmp/backend.zip
      dest: /app
      remote_src: yes

  - name: install npm dependencies
    ansible.builtin.command: npm install
    args:
      chdir: /app

  - name: copy backend service
    ansible.builtin.copy:
      src: backend.service
      dest: /etc/systemd/system/backend.service

  - name: install mysql python dependences
    ansible.builtin.pip:
      name: 
      - PyMySQL # to connect MySQL DB from Ansible
      - cryptography # to get password access have to install
      executable: pip3.9 # based on ansible python version

  - name: import data into mysql
    community.mysql.mysql_db:
      login_user: root
      login_password: "{{ login_password }}"
      login_host: "{{ login_host }}"
      target: < /app/schema/backend.sql
      state: import
      name: all

  - name: daemon reload
    ansible.builtin.systemd_service:
      daemon_reload: true

  - name: start and enable backend service
    ansible.builtin.service:
      name: backend
      state: started
      enabled: yes
